# Generated by Django 5.2 on 2025-04-06 13:09

import django.db.models.deletion
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('arazi', '0001_initial'),
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='ClimateAnalysis',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(max_length=100, verbose_name='Başlık')),
                ('analysis_date', models.DateField(verbose_name='Analiz Tarihi')),
                ('start_date', models.DateField(verbose_name='Başlangıç Tarihi')),
                ('end_date', models.DateField(verbose_name='Bitiş Tarihi')),
                ('avg_temperature', models.DecimalField(blank=True, decimal_places=2, max_digits=5, null=True, verbose_name='Ortalama Sıcaklık (°C)')),
                ('min_temperature', models.DecimalField(blank=True, decimal_places=2, max_digits=5, null=True, verbose_name='Minimum Sıcaklık (°C)')),
                ('max_temperature', models.DecimalField(blank=True, decimal_places=2, max_digits=5, null=True, verbose_name='Maksimum Sıcaklık (°C)')),
                ('total_precipitation', models.DecimalField(blank=True, decimal_places=2, max_digits=7, null=True, verbose_name='Toplam Yağış (mm)')),
                ('growing_degree_days', models.DecimalField(blank=True, decimal_places=2, max_digits=7, null=True, verbose_name='Büyüme Derece Günleri')),
                ('frost_days', models.PositiveIntegerField(blank=True, null=True, verbose_name='Don Günleri')),
                ('analysis_results', models.TextField(blank=True, null=True, verbose_name='Analiz Sonuçları')),
                ('recommendations', models.TextField(blank=True, null=True, verbose_name='Öneriler')),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='Eklenme Tarihi')),
                ('land', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='climate_analyses', to='arazi.land', verbose_name='Arazi')),
                ('owner', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='climate_analyses', to=settings.AUTH_USER_MODEL, verbose_name='Sahibi')),
            ],
            options={
                'verbose_name': 'İklim Analizi',
                'verbose_name_plural': 'İklim Analizleri',
                'ordering': ['-analysis_date'],
            },
        ),
        migrations.CreateModel(
            name='SoilMoistureData',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('timestamp', models.DateTimeField(verbose_name='Zaman')),
                ('depth', models.DecimalField(decimal_places=2, max_digits=5, verbose_name='Derinlik (cm)')),
                ('moisture_percent', models.DecimalField(decimal_places=2, max_digits=5, verbose_name='Nem Oranı (%)')),
                ('temperature', models.DecimalField(blank=True, decimal_places=2, max_digits=5, null=True, verbose_name='Toprak Sıcaklığı (°C)')),
                ('sensor_id', models.CharField(blank=True, max_length=50, null=True, verbose_name='Sensör ID')),
                ('battery_level', models.DecimalField(blank=True, decimal_places=2, max_digits=5, null=True, verbose_name='Pil Seviyesi (%)')),
                ('is_manual_entry', models.BooleanField(default=False, verbose_name='Manuel Giriş mi?')),
                ('notes', models.TextField(blank=True, null=True, verbose_name='Notlar')),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='Eklenme Tarihi')),
                ('parcel', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='soil_moisture_data', to='arazi.parcel', verbose_name='Parsel')),
            ],
            options={
                'verbose_name': 'Toprak Nemi Verisi',
                'verbose_name_plural': 'Toprak Nemi Verileri',
                'ordering': ['-timestamp'],
            },
        ),
        migrations.CreateModel(
            name='WeatherStation',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100, verbose_name='İstasyon Adı')),
                ('station_id', models.CharField(blank=True, max_length=50, null=True, verbose_name='İstasyon ID')),
                ('location', models.CharField(max_length=200, verbose_name='Konum')),
                ('latitude', models.DecimalField(decimal_places=6, max_digits=9, verbose_name='Enlem')),
                ('longitude', models.DecimalField(decimal_places=6, max_digits=9, verbose_name='Boylam')),
                ('elevation', models.DecimalField(blank=True, decimal_places=2, max_digits=7, null=True, verbose_name='Rakım (m)')),
                ('api_key', models.CharField(blank=True, max_length=100, null=True, verbose_name='API Anahtarı')),
                ('api_url', models.URLField(blank=True, null=True, verbose_name='API URL')),
                ('is_active', models.BooleanField(default=True, verbose_name='Aktif')),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='Eklenme Tarihi')),
                ('owner', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='weather_stations', to=settings.AUTH_USER_MODEL, verbose_name='Sahibi')),
            ],
            options={
                'verbose_name': 'Hava Durumu İstasyonu',
                'verbose_name_plural': 'Hava Durumu İstasyonları',
                'ordering': ['name'],
            },
        ),
        migrations.CreateModel(
            name='WeatherAlert',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('alert_type', models.CharField(choices=[('frost', 'Don'), ('extreme_heat', 'Aşırı Sıcaklık'), ('heavy_rain', 'Şiddetli Yağış'), ('flood', 'Sel'), ('drought', 'Kuraklık'), ('storm', 'Fırtına'), ('hail', 'Dolu'), ('snow', 'Kar'), ('other', 'Diğer')], max_length=20, verbose_name='Uyarı Tipi')),
                ('severity', models.CharField(choices=[('info', 'Bilgi'), ('advisory', 'Tavsiye'), ('watch', 'İzleme'), ('warning', 'Uyarı'), ('emergency', 'Acil Durum')], max_length=10, verbose_name='Şiddet Seviyesi')),
                ('title', models.CharField(max_length=100, verbose_name='Başlık')),
                ('description', models.TextField(verbose_name='Açıklama')),
                ('start_time', models.DateTimeField(verbose_name='Başlangıç Zamanı')),
                ('end_time', models.DateTimeField(verbose_name='Bitiş Zamanı')),
                ('is_active', models.BooleanField(default=True, verbose_name='Aktif')),
                ('is_read', models.BooleanField(default=False, verbose_name='Okundu')),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='Eklenme Tarihi')),
                ('lands', models.ManyToManyField(blank=True, related_name='weather_alerts', to='arazi.land', verbose_name='Araziler')),
                ('parcels', models.ManyToManyField(blank=True, related_name='weather_alerts', to='arazi.parcel', verbose_name='Parseller')),
                ('station', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='weather_alerts', to='iklim.weatherstation', verbose_name='İstasyon')),
            ],
            options={
                'verbose_name': 'Hava Durumu Uyarısı',
                'verbose_name_plural': 'Hava Durumu Uyarıları',
                'ordering': ['-start_time'],
            },
        ),
        migrations.CreateModel(
            name='WeatherData',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('timestamp', models.DateTimeField(verbose_name='Zaman')),
                ('temperature', models.DecimalField(blank=True, decimal_places=2, max_digits=5, null=True, verbose_name='Sıcaklık (°C)')),
                ('feels_like', models.DecimalField(blank=True, decimal_places=2, max_digits=5, null=True, verbose_name='Hissedilen Sıcaklık (°C)')),
                ('humidity', models.DecimalField(blank=True, decimal_places=2, max_digits=5, null=True, verbose_name='Nem (%)')),
                ('pressure', models.DecimalField(blank=True, decimal_places=2, max_digits=6, null=True, verbose_name='Basınç (hPa)')),
                ('wind_speed', models.DecimalField(blank=True, decimal_places=2, max_digits=5, null=True, verbose_name='Rüzgar Hızı (m/s)')),
                ('wind_direction', models.DecimalField(blank=True, decimal_places=2, max_digits=5, null=True, verbose_name='Rüzgar Yönü (derece)')),
                ('precipitation', models.DecimalField(blank=True, decimal_places=2, max_digits=5, null=True, verbose_name='Yağış (mm)')),
                ('precipitation_probability', models.DecimalField(blank=True, decimal_places=2, max_digits=5, null=True, verbose_name='Yağış Olasılığı (%)')),
                ('cloud_cover', models.DecimalField(blank=True, decimal_places=2, max_digits=5, null=True, verbose_name='Bulut Örtüsü (%)')),
                ('uv_index', models.DecimalField(blank=True, decimal_places=2, max_digits=4, null=True, verbose_name='UV İndeksi')),
                ('weather_condition', models.CharField(blank=True, max_length=100, null=True, verbose_name='Hava Durumu')),
                ('weather_icon', models.CharField(blank=True, max_length=50, null=True, verbose_name='Hava Durumu İkonu')),
                ('is_forecast', models.BooleanField(default=False, verbose_name='Tahmin mi?')),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='Eklenme Tarihi')),
                ('station', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='weather_data', to='iklim.weatherstation', verbose_name='İstasyon')),
            ],
            options={
                'verbose_name': 'Hava Durumu Verisi',
                'verbose_name_plural': 'Hava Durumu Verileri',
                'ordering': ['-timestamp'],
                'unique_together': {('station', 'timestamp', 'is_forecast')},
            },
        ),
    ]
