# Generated by Django 5.2 on 2025-04-06 13:09

import django.db.models.deletion
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('hayvan', '0001_initial'),
        ('uretim', '0001_initial'),
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='Supplier',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=200, verbose_name='Tedarikçi Adı')),
                ('contact_person', models.CharField(blank=True, max_length=100, null=True, verbose_name='İlgili Kişi')),
                ('phone', models.CharField(blank=True, max_length=20, null=True, verbose_name='Telefon')),
                ('email', models.EmailField(blank=True, max_length=254, null=True, verbose_name='E-posta')),
                ('address', models.TextField(blank=True, null=True, verbose_name='Adres')),
                ('website', models.URLField(blank=True, null=True, verbose_name='Web Sitesi')),
                ('tax_number', models.CharField(blank=True, max_length=50, null=True, verbose_name='Vergi No')),
                ('notes', models.TextField(blank=True, null=True, verbose_name='Notlar')),
                ('is_active', models.BooleanField(default=True, verbose_name='Aktif')),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='Eklenme Tarihi')),
                ('updated_at', models.DateTimeField(auto_now=True, verbose_name='Güncelleme Tarihi')),
            ],
            options={
                'verbose_name': 'Tedarikçi',
                'verbose_name_plural': 'Tedarikçiler',
                'ordering': ['name'],
            },
        ),
        migrations.CreateModel(
            name='UnitOfMeasure',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=50, verbose_name='Birim Adı')),
                ('abbreviation', models.CharField(max_length=10, verbose_name='Kısaltma')),
            ],
            options={
                'verbose_name': 'Ölçü Birimi',
                'verbose_name_plural': 'Ölçü Birimleri',
                'ordering': ['name'],
            },
        ),
        migrations.CreateModel(
            name='Category',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100, verbose_name='Kategori Adı')),
                ('description', models.TextField(blank=True, null=True, verbose_name='Açıklama')),
                ('is_active', models.BooleanField(default=True, verbose_name='Aktif')),
                ('parent', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='subcategories', to='stok.category', verbose_name='Üst Kategori')),
            ],
            options={
                'verbose_name': 'Kategori',
                'verbose_name_plural': 'Kategoriler',
                'ordering': ['name'],
            },
        ),
        migrations.CreateModel(
            name='InventoryItem',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=200, verbose_name='Ürün Adı')),
                ('item_type', models.CharField(choices=[('seed', 'Tohum'), ('fertilizer', 'Gübre'), ('pesticide', 'Zirai İlaç'), ('animal_feed', 'Hayvan Yemi'), ('medicine', 'İlaç/Aşı'), ('equipment', 'Ekipman'), ('spare_part', 'Yedek Parça'), ('fuel', 'Yakıt'), ('product', 'Ürün'), ('other', 'Diğer')], max_length=20, verbose_name='Ürün Tipi')),
                ('sku', models.CharField(blank=True, max_length=50, null=True, verbose_name='Stok Kodu')),
                ('barcode', models.CharField(blank=True, max_length=50, null=True, verbose_name='Barkod')),
                ('description', models.TextField(blank=True, null=True, verbose_name='Açıklama')),
                ('min_stock_level', models.DecimalField(decimal_places=2, default=0, max_digits=10, verbose_name='Minimum Stok Seviyesi')),
                ('purchase_price', models.DecimalField(blank=True, decimal_places=2, max_digits=10, null=True, verbose_name='Alış Fiyatı')),
                ('sale_price', models.DecimalField(blank=True, decimal_places=2, max_digits=10, null=True, verbose_name='Satış Fiyatı')),
                ('vat_rate', models.DecimalField(decimal_places=2, default=18, max_digits=5, verbose_name='KDV Oranı (%)')),
                ('image', models.ImageField(blank=True, null=True, upload_to='inventory/', verbose_name='Resim')),
                ('is_active', models.BooleanField(default=True, verbose_name='Aktif')),
                ('notes', models.TextField(blank=True, null=True, verbose_name='Notlar')),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='Eklenme Tarihi')),
                ('updated_at', models.DateTimeField(auto_now=True, verbose_name='Güncelleme Tarihi')),
                ('category', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='inventory_items', to='stok.category', verbose_name='Kategori')),
                ('owner', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='inventory_items', to=settings.AUTH_USER_MODEL, verbose_name='Sahip')),
                ('related_animal_type', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='inventory_items', to='hayvan.animaltype', verbose_name='İlişkili Hayvan Türü')),
                ('related_product', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='inventory_items', to='uretim.product', verbose_name='İlişkili Ürün')),
                ('supplier', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='inventory_items', to='stok.supplier', verbose_name='Tedarikçi')),
                ('unit', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, related_name='inventory_items', to='stok.unitofmeasure', verbose_name='Birim')),
            ],
            options={
                'verbose_name': 'Stok Kalemi',
                'verbose_name_plural': 'Stok Kalemleri',
                'ordering': ['name'],
            },
        ),
        migrations.CreateModel(
            name='StockTransaction',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('transaction_date', models.DateTimeField(verbose_name='İşlem Tarihi')),
                ('transaction_type', models.CharField(choices=[('purchase', 'Satın Alma'), ('sale', 'Satış'), ('consumption', 'Tüketim'), ('transfer', 'Transfer'), ('adjustment', 'Stok Düzeltme'), ('return_in', 'İade (Giriş)'), ('return_out', 'İade (Çıkış)'), ('initial', 'Başlangıç Girişi')], max_length=20, verbose_name='İşlem Tipi')),
                ('quantity', models.DecimalField(decimal_places=2, max_digits=10, verbose_name='Miktar')),
                ('unit_price', models.DecimalField(blank=True, decimal_places=2, max_digits=10, null=True, verbose_name='Birim Fiyat')),
                ('reference_no', models.CharField(blank=True, max_length=100, null=True, verbose_name='Referans No')),
                ('notes', models.TextField(blank=True, null=True, verbose_name='Notlar')),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='Eklenme Tarihi')),
                ('created_by', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='stock_transactions', to=settings.AUTH_USER_MODEL, verbose_name='Oluşturan')),
                ('item', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='transactions', to='stok.inventoryitem', verbose_name='Ürün')),
                ('supplier', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='transactions', to='stok.supplier', verbose_name='Tedarikçi')),
            ],
            options={
                'verbose_name': 'Stok Hareketi',
                'verbose_name_plural': 'Stok Hareketleri',
                'ordering': ['-transaction_date'],
            },
        ),
        migrations.CreateModel(
            name='Warehouse',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100, verbose_name='Depo Adı')),
                ('location', models.CharField(blank=True, max_length=200, null=True, verbose_name='Konum')),
                ('description', models.TextField(blank=True, null=True, verbose_name='Açıklama')),
                ('is_active', models.BooleanField(default=True, verbose_name='Aktif')),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='Eklenme Tarihi')),
                ('owner', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='warehouses', to=settings.AUTH_USER_MODEL, verbose_name='Sahip')),
            ],
            options={
                'verbose_name': 'Depo',
                'verbose_name_plural': 'Depolar',
                'ordering': ['name'],
            },
        ),
        migrations.CreateModel(
            name='InventoryLocation',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('quantity', models.DecimalField(decimal_places=2, default=0, max_digits=10, verbose_name='Stok Miktarı')),
                ('last_updated', models.DateTimeField(auto_now=True, verbose_name='Son Güncelleme')),
                ('item', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='inventory_locations', to='stok.inventoryitem', verbose_name='Ürün')),
                ('warehouse', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='inventory_items', to='stok.warehouse', verbose_name='Depo')),
            ],
            options={
                'verbose_name': 'Stok Konumu',
                'verbose_name_plural': 'Stok Konumları',
                'ordering': ['warehouse', 'item'],
                'unique_together': {('item', 'warehouse')},
            },
        ),
    ]
