# Generated by Django 5.2 on 2025-04-06 13:09

import django.db.models.deletion
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('arazi', '0001_initial'),
        ('hayvan', '0001_initial'),
        ('uretim', '0001_initial'),
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='Equipment',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100, verbose_name='Ekipman Adı')),
                ('equipment_type', models.CharField(max_length=100, verbose_name='Ekipman Tipi')),
                ('model', models.CharField(blank=True, max_length=100, null=True, verbose_name='Model')),
                ('manufacturer', models.CharField(blank=True, max_length=100, null=True, verbose_name='Üretici')),
                ('serial_number', models.CharField(blank=True, max_length=100, null=True, verbose_name='Seri No')),
                ('purchase_date', models.DateField(blank=True, null=True, verbose_name='Satın Alma Tarihi')),
                ('purchase_price', models.DecimalField(blank=True, decimal_places=2, max_digits=10, null=True, verbose_name='Satın Alma Fiyatı')),
                ('status', models.CharField(default='available', max_length=50, verbose_name='Durum')),
                ('notes', models.TextField(blank=True, null=True, verbose_name='Notlar')),
                ('is_active', models.BooleanField(default=True, verbose_name='Aktif')),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='Eklenme Tarihi')),
                ('updated_at', models.DateTimeField(auto_now=True, verbose_name='Güncelleme Tarihi')),
                ('owner', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='equipment', to=settings.AUTH_USER_MODEL, verbose_name='Sahibi')),
            ],
            options={
                'verbose_name': 'Ekipman',
                'verbose_name_plural': 'Ekipmanlar',
                'ordering': ['name'],
            },
        ),
        migrations.CreateModel(
            name='MaintenanceSchedule',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(max_length=200, verbose_name='Başlık')),
                ('description', models.TextField(blank=True, null=True, verbose_name='Açıklama')),
                ('interval_value', models.PositiveIntegerField(verbose_name='Aralık Değeri')),
                ('interval_unit', models.CharField(max_length=20, verbose_name='Aralık Birimi')),
                ('last_maintenance_date', models.DateField(blank=True, null=True, verbose_name='Son Bakım Tarihi')),
                ('next_maintenance_date', models.DateField(verbose_name='Sonraki Bakım Tarihi')),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='Eklenme Tarihi')),
                ('created_by', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='created_maintenance_schedules', to=settings.AUTH_USER_MODEL, verbose_name='Oluşturan')),
                ('equipment', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='maintenance_schedules', to='gorev.equipment', verbose_name='Ekipman')),
            ],
            options={
                'verbose_name': 'Bakım Programı',
                'verbose_name_plural': 'Bakım Programları',
                'ordering': ['next_maintenance_date'],
            },
        ),
        migrations.CreateModel(
            name='TaskCategory',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100, verbose_name='Kategori Adı')),
                ('description', models.TextField(blank=True, null=True, verbose_name='Açıklama')),
                ('color_code', models.CharField(blank=True, max_length=20, null=True, verbose_name='Renk Kodu')),
                ('icon', models.CharField(blank=True, max_length=50, null=True, verbose_name='İkon')),
                ('is_active', models.BooleanField(default=True, verbose_name='Aktif')),
                ('owner', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='task_categories', to=settings.AUTH_USER_MODEL, verbose_name='Sahibi')),
            ],
            options={
                'verbose_name': 'Görev Kategorisi',
                'verbose_name_plural': 'Görev Kategorileri',
                'ordering': ['name'],
            },
        ),
        migrations.CreateModel(
            name='Task',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(max_length=200, verbose_name='Başlık')),
                ('description', models.TextField(blank=True, null=True, verbose_name='Açıklama')),
                ('status', models.CharField(choices=[('not_started', 'Başlamadı'), ('in_progress', 'Devam Ediyor'), ('completed', 'Tamamlandı'), ('cancelled', 'İptal Edildi'), ('delayed', 'Ertelendi')], default='not_started', max_length=20, verbose_name='Durum')),
                ('priority', models.CharField(choices=[('low', 'Düşük'), ('medium', 'Orta'), ('high', 'Yüksek'), ('urgent', 'Acil')], default='medium', max_length=10, verbose_name='Öncelik')),
                ('planned_start_date', models.DateField(verbose_name='Planlanan Başlangıç Tarihi')),
                ('planned_end_date', models.DateField(verbose_name='Planlanan Bitiş Tarihi')),
                ('actual_start_date', models.DateField(blank=True, null=True, verbose_name='Gerçek Başlangıç Tarihi')),
                ('actual_end_date', models.DateField(blank=True, null=True, verbose_name='Gerçek Bitiş Tarihi')),
                ('estimated_hours', models.DecimalField(blank=True, decimal_places=2, max_digits=6, null=True, verbose_name='Tahmini Süre (saat)')),
                ('actual_hours', models.DecimalField(blank=True, decimal_places=2, max_digits=6, null=True, verbose_name='Gerçek Süre (saat)')),
                ('is_recurring', models.BooleanField(default=False, verbose_name='Tekrarlanan Görev mi?')),
                ('recurrence_pattern', models.CharField(choices=[('none', 'Tekrar Yok'), ('daily', 'Günlük'), ('weekly', 'Haftalık'), ('monthly', 'Aylık'), ('yearly', 'Yıllık'), ('custom', 'Özel')], default='none', max_length=20, verbose_name='Tekrarlama Düzeni')),
                ('recurrence_details', models.JSONField(blank=True, null=True, verbose_name='Tekrarlama Detayları')),
                ('estimated_cost', models.DecimalField(blank=True, decimal_places=2, max_digits=10, null=True, verbose_name='Tahmini Maliyet')),
                ('actual_cost', models.DecimalField(blank=True, decimal_places=2, max_digits=10, null=True, verbose_name='Gerçek Maliyet')),
                ('completion_percentage', models.PositiveIntegerField(default=0, verbose_name='Tamamlanma Yüzdesi')),
                ('completion_notes', models.TextField(blank=True, null=True, verbose_name='Tamamlanma Notları')),
                ('is_active', models.BooleanField(default=True, verbose_name='Aktif')),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='Eklenme Tarihi')),
                ('updated_at', models.DateTimeField(auto_now=True, verbose_name='Güncelleme Tarihi')),
                ('created_by', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='created_tasks', to=settings.AUTH_USER_MODEL, verbose_name='Oluşturan')),
                ('equipment_needed', models.ManyToManyField(blank=True, related_name='tasks', to='gorev.equipment', verbose_name='Gereken Ekipmanlar')),
                ('owner', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='tasks', to=settings.AUTH_USER_MODEL, verbose_name='Sahibi')),
                ('parent_task', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='child_tasks', to='gorev.task', verbose_name='Üst Görev')),
                ('related_animal', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='tasks', to='hayvan.animal', verbose_name='İlgili Hayvan')),
                ('related_animal_group', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='tasks', to='hayvan.animalgroup', verbose_name='İlgili Hayvan Grubu')),
                ('related_land', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='tasks', to='arazi.land', verbose_name='İlgili Arazi')),
                ('related_parcel', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='tasks', to='arazi.parcel', verbose_name='İlgili Parsel')),
                ('related_planting', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='tasks', to='uretim.planting', verbose_name='İlgili Ekim')),
                ('category', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='tasks', to='gorev.taskcategory', verbose_name='Kategori')),
            ],
            options={
                'verbose_name': 'Görev',
                'verbose_name_plural': 'Görevler',
                'ordering': ['planned_start_date', 'priority'],
            },
        ),
        migrations.CreateModel(
            name='TaskComment',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('comment', models.TextField(verbose_name='Yorum')),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='Eklenme Tarihi')),
                ('task', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='comments', to='gorev.task', verbose_name='Görev')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='task_comments', to=settings.AUTH_USER_MODEL, verbose_name='Kullanıcı')),
            ],
            options={
                'verbose_name': 'Görev Yorumu',
                'verbose_name_plural': 'Görev Yorumları',
                'ordering': ['-created_at'],
            },
        ),
        migrations.CreateModel(
            name='Worker',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('first_name', models.CharField(max_length=100, verbose_name='Ad')),
                ('last_name', models.CharField(max_length=100, verbose_name='Soyad')),
                ('phone', models.CharField(blank=True, max_length=20, null=True, verbose_name='Telefon')),
                ('email', models.EmailField(blank=True, max_length=254, null=True, verbose_name='E-posta')),
                ('position', models.CharField(blank=True, max_length=100, null=True, verbose_name='Pozisyon')),
                ('address', models.TextField(blank=True, null=True, verbose_name='Adres')),
                ('birth_date', models.DateField(blank=True, null=True, verbose_name='Doğum Tarihi')),
                ('hire_date', models.DateField(blank=True, null=True, verbose_name='İşe Başlama Tarihi')),
                ('hourly_rate', models.DecimalField(blank=True, decimal_places=2, max_digits=8, null=True, verbose_name='Saatlik Ücret')),
                ('daily_rate', models.DecimalField(blank=True, decimal_places=2, max_digits=8, null=True, verbose_name='Günlük Ücret')),
                ('specializations', models.TextField(blank=True, null=True, verbose_name='Uzmanlıklar')),
                ('notes', models.TextField(blank=True, null=True, verbose_name='Notlar')),
                ('is_active', models.BooleanField(default=True, verbose_name='Aktif')),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='Eklenme Tarihi')),
                ('updated_at', models.DateTimeField(auto_now=True, verbose_name='Güncelleme Tarihi')),
                ('owner', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='workers', to=settings.AUTH_USER_MODEL, verbose_name='Sahibi')),
                ('user', models.OneToOneField(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='worker_profile', to=settings.AUTH_USER_MODEL, verbose_name='Kullanıcı')),
            ],
            options={
                'verbose_name': 'Çalışan',
                'verbose_name_plural': 'Çalışanlar',
                'ordering': ['last_name', 'first_name'],
            },
        ),
        migrations.AddField(
            model_name='task',
            name='assigned_workers',
            field=models.ManyToManyField(blank=True, related_name='assigned_tasks', to='gorev.worker', verbose_name='Atanan Çalışanlar'),
        ),
        migrations.CreateModel(
            name='WorkLog',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('date', models.DateField(verbose_name='Tarih')),
                ('start_time', models.TimeField(verbose_name='Başlangıç Saati')),
                ('end_time', models.TimeField(verbose_name='Bitiş Saati')),
                ('hours_worked', models.DecimalField(decimal_places=2, max_digits=5, verbose_name='Çalışılan Saat')),
                ('description', models.TextField(blank=True, null=True, verbose_name='Açıklama')),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='Eklenme Tarihi')),
                ('task', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='work_logs', to='gorev.task', verbose_name='Görev')),
                ('worker', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='work_logs', to='gorev.worker', verbose_name='Çalışan')),
            ],
            options={
                'verbose_name': 'Çalışma Kaydı',
                'verbose_name_plural': 'Çalışma Kayıtları',
                'ordering': ['-date', '-start_time'],
            },
        ),
    ]
